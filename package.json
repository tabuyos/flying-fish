{
  "publisher": "tabuyos",
  "name": "flying-fish",
  "displayName": "Flying Fish Keymap",
  "description": "Flying-Fish Keymap for quickly devlop",
  "repository": {
    "type": "git",
    "url": "https://github.com/tabuyos/flying-fish.git"
  },
  "homepage": "https://github.com/tabuyos/flying-fish",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:flying-fish.cursorHome",
    "onCommand:flying-fish.cursorEnd",
    "onCommand:flying-fish.cursorUp",
    "onCommand:flying-fish.cursorDown",
    "onCommand:flying-fish.cursorLeft",
    "onCommand:flying-fish.cursorRight",
    "onCommand:flying-fish.cursorWordRight",
    "onCommand:flying-fish.cursorWordLeft",
    "onCommand:flying-fish.cursorWordPartRight",
    "onCommand:flying-fish.cursorWordPartLeft",
    "onCommand:flying-fish.cursorTop",
    "onCommand:flying-fish.cursorBottom",
    "onCommand:flying-fish.cursorPageDown",
    "onCommand:flying-fish.cursorPageUp",
    "onCommand:flying-fish.enableSticky",
    "onCommand:flying-fish.disableSticky",
    "onCommand:flying-fish.startLeadering",
    "onCommand:flying-fish.stopLeadering",
    "onCommand:flying-fish.clipboardCopyAction",
    "onCommand:flying-fish.clipboardCutAction",
    "onCommand:flying-fish.clipboardPasteAction",
    "onCommand:flying-fish.pickAndPaste"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "flying-fish.toggleFlyingFish",
        "title": "Toggle Flying",
        "category": "Flying Fish"
      },
      {
        "command": "flying-fish.toggleSticky",
        "title": "Toggle Sticky",
        "category": "Flying Fish"
      }
    ],
    "keybindings": [
      {
        "key": ",",
        "command": "flying-fish.startLeadering",
        "when": "editorFocus && flying-fish.enabled"
      },
      {
        "key": ",",
        "command": "runCommands",
        "args": {
          "commands": [
            "flying-fish.insertComma",
            "flying-fish.stopLeadering"
          ]
        },
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "space",
        "command": "flying-fish.stopLeadering",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "escape",
        "command": "flying-fish.stopLeadering",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "ctrl+g",
        "command": "flying-fish.stopLeadering",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "f",
        "command": "flying-fish.cursorRight",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "b",
        "command": "flying-fish.cursorLeft",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "a",
        "command": "flying-fish.cursorHome",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "e",
        "command": "flying-fish.cursorEnd",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "n",
        "command": "flying-fish.cursorDown",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "p",
        "command": "flying-fish.cursorUp",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "s",
        "command": "workbench.action.files.save",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "r",
        "command": "workbench.action.files.toggleActiveEditorReadonlyInSession",
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "c c",
        "command": "runCommands",
        "args": {
          "commands": [
            "workbench.action.showCommands",
            "flying-fish.stopLeadering"
          ]
        },
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "c k",
        "command": "runCommands",
        "args": {
          "commands": [
            "editor.action.deleteLines",
            "flying-fish.stopLeadering"
          ]
        },
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "c d",
        "command": "runCommands",
        "args": {
          "commands": [
            "editor.action.duplicateSelection",
            "flying-fish.stopLeadering"
          ]
        },
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },
      {
        "key": "c e",
        "command": "runCommands",
        "args": {
          "commands": [
            "workbench.action.showAllEditorsByMostRecentlyUsed",
            "flying-fish.stopLeadering"
          ]
        },
        "when": "editorFocus && flying-fish.enabled && flying-fish.mode == 'leadering'"
      },


      {
        "key": "ctrl+g",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "flying-fish.disableSticky",
        "when": "flying-fish.sticky && textInputFocus"
      },
      {
        "key": "escape",
        "command": "flying-fish.disableSticky",
        "when": "flying-fish.sticky && textInputFocus"
      },
      {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
      },
      {
        "key": "ctrl+f",
        "command": "flying-fish.cursorRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+b",
        "command": "flying-fish.cursorLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+p",
        "command": "flying-fish.cursorUp",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+n",
        "command": "flying-fish.cursorDown",
        "when": "textInputFocus"
      },
      {
        "key": "alt+f",
        "command": "flying-fish.cursorWordRight",
        "when": "textInputFocus"
      },
      {
        "key": "alt+b",
        "command": "flying-fish.cursorWordLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+f",
        "command": "flying-fish.cursorWordPartRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+b",
        "command": "flying-fish.cursorWordPartLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+a",
        "command": "flying-fish.cursorHome",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+e",
        "command": "flying-fish.cursorEnd",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+,",
        "command": "flying-fish.cursorTop",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+.",
        "command": "flying-fish.cursorBottom",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus"
      },
      {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+alt+d",
        "command": "deleteWordPartRight",
        "when": "textInputFocus"
      },
      {
        "key": "alt+w",
        "command": "flying-fish.clipboardCopyAction"
      },
      {
        "key": "ctrl+w",
        "command": "flying-fish.clipboardCutAction"
      },
      {
        "key": "ctrl+y",
        "command": "flying-fish.clipboardPasteAction"
      },
      {
        "key": "alt+y",
        "command": "flying-fish.pickAndPaste",
        "when": "textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+s",
        "command": "actions.find"
      },
      {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "alt+p",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+n",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+v",
        "command": "flying-fish.cursorPageDown",
        "when": "textInputFocus"
      },
      {
        "key": "alt+v",
        "command": "flying-fish.cursorPageUp",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+c ctrl+k",
        "command": "editor.action.deleteLines"
      },
      {
        "key": "ctrl+c ctrl+d",
        "command": "editor.action.duplicateSelection"
      },
      {
        "key": "ctrl+c ctrl+e",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
      },
      {
        "key": "ctrl+c ctrl+s",
        "command": "workbench.action.gotoSymbol"
      },
      {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
      },
      {
        "key": "ctrl+c ctrl+c",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+c u",
        "command": "git.pull"
      },
      {
        "key": "ctrl+c p",
        "command": "git.push"
      },
      {
        "key": "ctrl+j",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+o",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+.",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+alt+w",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+s",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
      },
      {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+/",
        "command": "undo"
      },
      {
        "key": "alt+;",
        "command": "editor.action.commentLine"
      },
      {
        "key": "ctrl+alt+;",
        "command": "editor.action.blockComment"
      },
      {
        "key": "alt+.",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
      },
      {
        "key": "alt+,",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
      },
      {
        "key": "ctrl+,",
        "command": "flying-fish.toggleSticky",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+x ctrl+x",
        "command": "flying-fish.switchAnchorAndCursor",
        "when": "editorHasSelection && editorTextFocus"
      },
      {
        "key": "ctrl+space",
        "command": "-sticky-selection.enterStickySelectionMode",
        "when": "editorTextFocus"
      },
      {
        "key": "shift+space",
        "command": "workbench.action.quickOpenWithModes"
      },
      {
        "key": "ctrl+shift+alt+p",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+alt+n",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.92.0",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "eslint": "^8.57.0",
    "typescript": "^5.4.5",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0"
  },
  "extensionPack": [
    "EdgardMessias.clipboard-manager"
  ]
}